plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'maven-publish'
}

group = 'eth.likespro'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.projectreactor:reactor-core:3.6.10'
    implementation 'org.mongodb:mongodb-driver-reactivestreams:5.1.4'
    implementation 'org.web3j:core:5.0.0'
    implementation 'org.gnu:gnu-crypto:2.0.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-codec:commons-codec:1.13'
    implementation 'org.json:json:20230227'
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

publishing{
    publications{
        maven(MavenPublication){
            groupId = "eth.likespro"
            artifactId = "commons"
            version = "1.0.0"
            from components.java

            pom {
                name = 'likespro Commons'
                description = 'Useful methods and models for java/kotlin projects.'
                url = 'https://github.com/nowshad-hasan/solid-potato'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'likespro'
                        name = 'Like Pro'
                        email = 'likespro.eth@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/nowshad-hasan/solid-potato.git'
                    developerConnection = 'scm:git:ssh://github.com/nowshad-hasan/solid-potato.git'
                    url = 'https://github.com/nowshad-hasan/solid-potato'
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '16'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '16'
}
jar{
    manifest {
        attributes 'Premain-Class': 'eth.likespro.commons.ObjectSizeFetcher'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { (configurations.runtimeClasspath).collect { println(it.name); if(it.name == "gson-2.8.9.jar" || it.name == "commons-codec-1.13.jar") zipTree(it) else null } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    enabled = true
}
task customFatJar(type: Jar) {
    manifest {
        attributes 'Premain-Class': 'eth.likespro.commons.ObjectSizeFetcher'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { (configurations.runtimeClasspath).collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    exclude("META-INF/*.RSA", "META-INF/*.DSA", "META-INF/*.SF")
    with jar
    exclude("META-INF/*.RSA", "META-INF/*.DSA", "META-INF/*.SF")
}
java{
    withJavadocJar()
    withSourcesJar()
}